# Create a username and generate a random password
USERNAME=azureuser
PASSWORD=$(openssl rand -base64 32)

# Creates the VM in the "East US" location
az vm create \
  --name myVM \
  --resource-group 81b795a6-b791-49b5-9fe0-1779bf99a3ff \
  --image Win2016Datacenter \
  --size Standard_DS2_v2 \
  --location eastus \
  --admin-username $USERNAME \
  --admin-password $PASSWORD

# Verify that the VM was successfully created and is running
az vm get-instance-view \
  --name myVM \
  --resource-group 81b795a6-b791-49b5-9fe0-1779bf99a3ff \
  --output table

# Install IIS and configure a basic home page
az vm extension set \
  --resource-group 81b795a6-b791-49b5-9fe0-1779bf99a3ff \
  --vm-name myVM \
  --name CustomScriptExtension \
  --publisher Microsoft.Compute \
  --settings '{"fileUris":["https://raw.githubusercontent.com/MicrosoftDocs/mslearn-welcome-to-azure/master/configure-iis.ps1"]}' \
  --protected-settings '{"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File configure-iis.ps1"}'
  
# Open port 80 (HTTP) through the firewall
az vm open-port \
  --name myVM \
  --resource-group 81b795a6-b791-49b5-9fe0-1779bf99a3ff \
  --port 80
  
# List your VM's public IP address
az vm show \
  --name myVM \
  --resource-group 81b795a6-b791-49b5-9fe0-1779bf99a3ff \
  --show-details \
  --query [publicIps] \
  --output tsv

# Increase your VM's size to Standard_DS3_v2
az vm resize \
  --resource-group 51f8b8b8-8d1e-460d-b6df-01976f486c46 \
  --name myVM \
  --size Standard_DS3_v2

# Verify that your VM is running the new size
az vm show \
  --resource-group 51f8b8b8-8d1e-460d-b6df-01976f486c46 \
  --name myVM \
  --query "hardwareProfile" \
  --output tsv

# You can delete resources one by one, or just delete the resource group to get rid of the entire set.

================================================================================================================================================

# Getting started with Azure Kubernetes Service (AKS)

# Create a Kubernetes cluster
az aks create -n $NAME -g $GROUP

# Install kubectl tool to manage the cluster
az aks install-cli

# Configure kubectl to securely connect
# az aks get-credentials create -n $NAME -g $GROUP 


================================================================================================================================================

# Create your vault
az keyvault create \
    --resource-group e3c4d2ef-bf7b-4ea9-ad32-c942533994bb \
    --name "hgouwdemo"

# Add the secret: our secret will be named SecretPassword with a value of reindeer_flotilla
az keyvault secret set \
    --name SecretPassword \
    --value reindeer_flotilla \
    --vault-name "hgouwdemo"

# Create a new ASP.NET Core web API application and open it in the editor
dotnet new webapi -o KeyVaultDemoApp
cd KeyVaultDemoApp
code .

# Add the NuGet package containing AddAzureKeyVault and restore all of the app's dependencies
dotnet add package Microsoft.Extensions.Configuration.AzureKeyVault -v 2.1.1
dotnet restore

touch Controllers/SecretTestController.cs
dotnet build

# Create an App Service plan
az appservice plan create \
    --name keyvault-exercise-plan \
    --resource-group e3c4d2ef-bf7b-4ea9-ad32-c942533994bb
	
# Create the Web App that uses the App Service plan you just created
az webapp create \
    --plan keyvault-exercise-plan \
    --resource-group e3c4d2ef-bf7b-4ea9-ad32-c942533994bb \
    --name "hgouwdemo"

# Create the application setting
az webapp config appsettings set \
    --resource-group e3c4d2ef-bf7b-4ea9-ad32-c942533994bb \
    --name "hgouwdemo" \
    --settings 'VaultName=hgouwdemo'

# Enable managed identity on the app
az webapp identity assign \
    --resource-group e3c4d2ef-bf7b-4ea9-ad32-c942533994bb \
    --name "hgouwdemo"

# Assign Key Vault permissions to your app's managed identity
# Use the principalId value you copied from the previous step as the value for object-id in the command below
az keyvault set-policy \
    --secret-permissions get list \
    --name "hgouwdemo" \
    --object-id <your-managed-identity-principleid>
	
# Deploy the app
dotnet publish -o pub
zip -j site.zip pub/*

az webapp deployment source config-zip \
    --src site.zip \
    --resource-group e3c4d2ef-bf7b-4ea9-ad32-c942533994bb \
    --name "hgouwdemo"

# To cleanup your Cloud Shell storage, delete the KeyVaultDemoApp directory



